#  Template python-build

#  This template allows you to validate your python code.
#  The workflow allows running tests and code linting on the default branch.

image: python:3.8

clone:
  depth: full              # SonarCloud scanner needs the full history to assign issues properly

definitions:
  services:
    docker:
      memory: 2048
  caches:
    sonar: ~/.sonar/cache  # Caching SonarCloud artifacts will speed up your build
  steps:
  - step: &build-test-sonarcloud
      name: Build, test and analyze on SonarCloud
      caches:
        - pip
        - sonar
      script:
        - pipe: sonarsource/sonarcloud-scan:1.2.1
  - step: &check-quality-gate-sonarcloud
      name: Check the Quality Gate on SonarCloud
      script:
        - pipe: sonarsource/sonarcloud-quality-gate:0.1.4

pipelines:
  default:
    - parallel:
      # - step:
      #     name: Test
      #     caches:
      #       - pip
      #     script:
      #       - if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      #       - pip install pytest
      #       - pytest -v tests/* --junitxml=test-reports/report.xml
      - step:
          name: Lint code
          script:
            # Enforce style consistency across Python projects https://flake8.pycqa.org/en/latest/manpage.html
            - pip install pylint
            - pylint ./app/tests/ | tee pylint.txt
      - step: *build-test-sonarcloud

#pipelines:                 # More info here: https://confluence.atlassian.com/bitbucket/configure-bitbucket-pipelines-yml-792298910.html
#  branches:
#    master:
#      - step: *build-test-sonarcloud
#      - step: *check-quality-gate-sonarcloud
#  pull-requests:
#    '**':
#      - step: *build-test-sonarcloud
